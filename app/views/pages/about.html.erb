<div class="container">
	<h4>SAMPLES</h4>
	<p>
	In order to train our own classifier we need samples, which means we need a lot of images that show the object we want to detect (positive sample) and even more images without the object (negative sample).
	</p>
	<h5>POSITIVE IMAGES</h5>
	<p>we need to either take photos of the object we want to detect, it’s important that they should differ in lighting and background.</p>
	<h5>NEGATIVE IMAGES</h5>
	<p>We need the negative images, the ones that don’t show our object. In the best case, if we were to train a highly accurate classifier, we would have a lot of negative images that look exactly like the positive ones, except that they don’t contain the object we want to recognize. We need at least 600 of them</p>
	<h5>CREATING SAMPLES</h5>
	<p>With our positive and negative images in place, we are ready to generate samples out of them, which we will use for the training itself. We need positive and negative samples</p>
	<p>We’re going to use a method that doesn’t need a lot of preparation or a large number of positive or negative images. We’ll use a tool OpenCV gives us: opencv_createsamples. This tool offers several options as to how generate samples out of input images and gives us a *.vec file which we can then use to train our classifier.

	opencv_createsamples generates a large number of positive samples from our positive images, by applying transformations and distortions. Since one can only transform so much out of one image until it’s not a different version anymore, we need a little help to get a larger number of samples out of our relatively small number of input images.</p>
	<h5>TRAINING THE CLASSIFIER</h5>
	<p>OpenCV offers two different applications for training a Haar classifier: opencv_haartraining and opencv_traincascade. We are going to use opencv_traincascade since it allows the training process to be multi-threaded, reducing the time it takes to finish, and is compatible with the newer OpenCV 2.x API. Whenever you run into a problem when loading your classifier, make sure the application knows how to handle the format of the cascade file, since cascade files generated by opencv_haartraining and opencv_traincascade differ in format.</p>
</div>